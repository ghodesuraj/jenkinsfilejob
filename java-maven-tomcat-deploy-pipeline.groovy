pipeline {
    agent any  // Use any available Jenkins agent/node for execution

    environment {
        // Define environment variables to be used in the pipeline
        TOMCAT_PATH = "/opt/tomcat"                // Path to Tomcat on the remote server
        TOMCAT_USER = "root"                       // SSH username for remote login
        TOMCAT_PASSWORD = "admin"                  // SSH password (Note: not secure, consider using Jenkins credentials plugin)
        TOMCAT_IP = "172.31.38.87"                 // IP address of the remote server
    }

    stages {

        stage('Checkout') {
            steps {
                // Clone the code from the GitHub repository (main branch)
                git branch: 'main', url: 'https://github.com/Azure-Samples/tomcat10-jakartaee9.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Use Maven to clean and build the project
                    // This will generate a .war file in the 'target' directory
                    sh 'mvn clean install'
                }
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                script {
                    // Define the WAR file path and destination directory on the remote server
                    def warFile = 'target/*.war'  // WAR file generated by Maven
                    def remoteWarPath = "${TOMCAT_PATH}/webapps"  // Tomcat deployment directory

                    // Debugging output to help trace deployment values
                    echo "WAR file path: ${warFile}"
                    echo "Remote path: ${remoteWarPath}"
                    echo "Tomcat user: ${TOMCAT_USER}"
                    echo "Tomcat IP: ${TOMCAT_IP}"
                    
                    // Copy the WAR file to the remote Tomcat server using SCP (requires sshpass)
                    // '-o StrictHostKeyChecking=no' avoids manual prompt when connecting for the first time
                    sh "sshpass -p '${TOMCAT_PASSWORD}' scp -v -o StrictHostKeyChecking=no ${warFile} ${TOMCAT_USER}@${TOMCAT_IP}:${remoteWarPath}"

                    // Restart Tomcat on the remote server by SSHing into it
                    // This ensures the new WAR is deployed
                    sh "sshpass -p '${TOMCAT_PASSWORD}' ssh -v -o StrictHostKeyChecking=no ${TOMCAT_USER}@${TOMCAT_IP} '${TOMCAT_PATH}/bin/shutdown.sh && ${TOMCAT_PATH}/bin/startup.sh'"
                }
            }
        }
    }

    post {
        success {
            // This block runs if the pipeline succeeds
            echo 'Build and Deployment Successful'
        }
        failure {
            // This block runs if the pipeline fails at any stage
            echo 'Build or Deployment Failed'
        }
    }
}

https://github.com/Azure-Samples/tomcat10-jakartaee9.git
Java   MAVEN  REPSO
https://github.com/Azure-Samples/tomcat10-jakartaee9
